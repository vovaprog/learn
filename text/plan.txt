call graph c++
gperftools
gtest
L2TP на new
setsockopt, sendmsg, recvmsg
udp
ssl
valgrind Memcheck
valgrind Massif
valgrind Helgrind
valgrind DRD
google sparse hash table
mem, rate 
pandas
apt-get, package tools
profiler
gdb
python
LLVM clang
LLVM debugger
vim (ctags)
sed - awk
Eclipse CDT
zmq, nanomsg
boost ASIO
boost intrusive containers
EASTL
google sanitizers https://github.com/google/sanitizers
containers without allocations
vim

+ mfast
+ rsync
+ deb
+ astyle
+ clang-format
+ jenkins
+ chroot
+ schroot
+ nosetests
+ btrfs
+ https://github.com/cppit/jucipp
+ QtCreator debugger
+ github pull request
+ virtualbox
+ grep, find, locate
+ google code checker
+ Будет ли const член класса занимать место? (будет)
+ midnight commander
+ midnight commander user menu
+ mcedit
+ ctags
+ pylint, pyflakes, pychecker, flake8
+ qt creator
+ callgrind
+ cachegrind
+ unaligned int64 access
+ boost::lockfree::spsc_queue
+ spinlock
+ gather
+ htop
+ ticket/cas based thread pool
+ flask basic auth
+ git blame
+ python color output
+ socket: send stream
+ iperf
+ non blocking socket
+ python sqlite
+ flask forms
+ Загрузить Raspberry с флешки
+ perf, zoom
+ sendfile
+ epoll
+ docker
+ openssl


=================================================================

Проверить скорости и записать дома (iperf и client-server)

http server:
+ server context
+ лог
+ wsgi
+ Много потоков для обработки
+ разобраться - убрать ServerContext.
+ ssl
+ несколько ServerExecutor

удаление executor-ов по timeout
xml конфигурация
лог в файл
остановка ssl при stop сервера
правки в календарь
правки в галерею
remove all perror

убрать лишние поля из структур.
Привести код в порядок
Убрать лишние header-ы

FileExecutor - заменить stat на fstat

нормальная инициализация
сначала проверять, что это приложение или файл, а потом для файла проверять url строже.
отправка ошибки, что нет файла


сравнение с busybox http server
Параметр сокета для отправки заголовка
буфер - не ring.
uwsgi - port
friend классы
__attribute__ ((format (printf, 1, 2)))


rc = setsockopt(listen_sd, SOL_SOCKET,  SO_REUSEADDR, (char *)&on, sizeof(on)); // Allow socket descriptor to be reuseable

